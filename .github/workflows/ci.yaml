name: CI

on:
  push:
    branches:
      - main
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/ci.yaml"
      - ".golangci.yaml"
      - "Makefile"

  pull_request:
    branches:
      - main
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/ci.yaml"
      - ".golangci.yaml"
      - "Makefile"

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest

    steps:
      - name: "Install libpcap"
        run: sudo apt-get install libpcap-dev

      - name: "Install Golang"
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.x

      - name: "Clone code"
        uses: actions/checkout@v3

      - name: "Runs linter"
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          skip-go-installation: true


  unit-tests:
    needs: lint

    name: "Test"
    runs-on: ubuntu-latest

    steps:
      - name: "Install libpcap"
        run: sudo apt-get install libpcap-dev

      - name: "Install Golang"
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.x

      - name: "Clone code"
        uses: actions/checkout@v3

      - name: "Runs unit tests"
        run: make unit-tests
        env:
          CHARON_ENDPOINT_NODE: {{ secrets.CHARON_ENDPOINT_NODE }}

  build:
    needs: unit-tests

    name: "Build"
    runs-on: ubuntu-latest

    steps:
      - name: "Install libpcap"
        run: sudo apt-get install libpcap-dev

      - name: "Install Golang"
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.x

      - name: "Clone code"
        uses: actions/checkout@v3

      - name: "Builds binary"
        run: make all